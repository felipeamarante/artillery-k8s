{{- range .Values.endpoints }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "artillery-load-testing.fullname" $ }}-{{ .name }}
  labels:
    {{- include "artillery-load-testing.labels" $ | nindent 4 }}
    app.kubernetes.io/component: load-test
    endpoint: {{ .name }}
spec:
  # Setting a schedule that never occurs, as we want manual triggering only
  schedule: "0 0 30 2 *"  # February 30th - a date that never happens
  suspend: true  # Explicitly suspend the cronjob
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0  # No retries if the job fails
      template:
        metadata:
          labels:
            {{- include "artillery-load-testing.selectorLabels" $ | nindent 12 }}
            endpoint: {{ .name }}
        spec:
          serviceAccountName: {{ include "artillery-load-testing.serviceAccountName" $ }}
          securityContext:
            {{- toYaml $.Values.podSecurityContext | nindent 12 }}
          containers:
            - name: artillery
              securityContext:
                {{- toYaml $.Values.securityContext | nindent 16 }}
              image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              command: ["sh", "-c"]
              args:
                - |
                  echo "Starting load test for {{ .name }}"
                  artillery run /tests/test-script.yml
                  echo "Load test completed"
                  echo "Keeping container alive for {{ $.Values.keepAliveDuration }} seconds"
                  sleep {{ $.Values.keepAliveDuration }}
              resources:
                {{- toYaml $.Values.resources | nindent 16 }}
              volumeMounts:
                - name: test-config
                  mountPath: /tests
          volumes:
            - name: test-config
              configMap:
                name: {{ include "artillery-load-testing.fullname" $ }}-{{ .name }}
                defaultMode: 0755
          restartPolicy: Never
{{- end }}